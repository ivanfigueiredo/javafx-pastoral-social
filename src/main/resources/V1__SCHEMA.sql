CREATE TABLE TPS_UNIDADE_MEDIDA (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    und_medidas VARCHAR(20) NOT NULL UNIQUE
);


CREATE TABLE TPS_CATEGORIA (
    id_categoria SERIAL PRIMARY KEY,
    categoria_desc VARCHAR(20) NOT NULL UNIQUE
);

CREATE TABLE TPS_LOCALIZACAO_ESTOQUE (
    id_localizacao SERIAL PRIMARY KEY,
    localizacao_desc VARCHAR(2) NOT NULL UNIQUE
);


CREATE TABLE TPS_ESTOQUE_ALIMENTOS (
    id_alimento BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    id_categoria INT NOT NULL,
    marca VARCHAR(255) NOT NULL,
    validade DATE NOT NULL,
    id_localizacao INT NOT NULL,
    item_na_validade BOOLEAN DEFAULT TRUE,
    id_und_medida INT NOT NULL,
    data_entrada TIMESTAMP WITH TIME ZONE DEFAULT now(),
    data_saida TIMESTAMP WITH TIME ZONE NULL,


    CONSTRAINT fk_id_localizacao FOREIGN KEY (id_localizacao) REFERENCES TPS_LOCALIZACAO_ESTOQUE (id_localizacao),
    CONSTRAINT fk_id_categoria FOREIGN KEY (id_categoria) REFERENCES TPS_CATEGORIA (id_categoria),
    CONSTRAINT fk_id_und_medida FOREIGN KEY (id_und_medida) REFERENCES TPS_UNIDADE_MEDIDA (id)
);

CREATE OR REPLACE FUNCTION set_timestamp_estoque()
RETURNS TRIGGER AS $$
BEGIN
    IF TG_OP = 'UPDATE' THEN
        NEW.data_saida := NOW();
    END IF;
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER trg_set_timestamp_estoque
BEFORE INSERT OR UPDATE ON TPS_ESTOQUE_ALIMENTOS
FOR EACH ROW
EXECUTE FUNCTION set_timestamp_estoque();

CREATE TABLE TPS_STATUS_CESTA (
    id_status_cesta SERIAL PRIMARY KEY,
    status_cesta VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE TPS_TEMPLATE (
    id_template BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    template_desc VARCHAR(255) NOT NULL
);

CREATE TABLE TPS_CESTA_GERADA (
    id_cesta BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    id_template INT NOT NULL,
    data_criacao TIMESTAMP WITH TIME ZONE NOT NULL,
    status VARCHAR(50) NOT NULL,

    CONSTRAINT fk_status FOREIGN KEY (status) REFERENCES TPS_STATUS_CESTA (status_cesta),
    CONSTRAINT fk_id_template FOREIGN KEY (id_template) REFERENCES TPS_TEMPLATE (id_template)
);

CREATE TABLE TPS_CESTA_TEMPLATE (
    id_cesta_template BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    id_categoria INT NOT NULL,
    id_template INT NOT NULL,
    quantidade INT NOT NULL,

    CONSTRAINT fk_id_template FOREIGN KEY (id_template) REFERENCES TPS_TEMPLATE (id_template),
    CONSTRAINT fk_id_categoria FOREIGN KEY (id_categoria) REFERENCES TPS_CATEGORIA (id_categoria)
);

CREATE TABLE TPS_ITEM_TEMPLATE (
    id_cesta_item BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    id_cesta_template INT NOT NULL,
    id_alimento INT NOT NULL,

    CONSTRAINT fk_id_cesta_template FOREIGN KEY (id_cesta_template) REFERENCES TPS_CESTA_TEMPLATE (id_cesta_template),
    CONSTRAINT fk_id_alimento FOREIGN KEY (id_alimento) REFERENCES TPS_ESTOQUE_ALIMENTOS (id_alimento)
);

CREATE TABLE TPS_CONFIG_COMBOBOX_DEPARTMENT(
    id_department SERIAL PRIMARY KEY,
    department VARCHAR(70) NOT NULL UNIQUE
);

CREATE TABLE TPS_CONFIG_COMBOBOX (
    id_combobox SERIAL PRIMARY KEY,
    valor_item VARCHAR(60) NOT NULL,
    id_department INT NOT NULL,

    CONSTRAINT fk_id_department FOREIGN KEY (id_department) REFERENCES TPS_CONFIG_COMBOBOX_DEPARTMENT (id_department)
);

INSERT INTO TPS_UNIDADE_MEDIDA (und_medidas) VALUES ('und');
INSERT INTO TPS_UNIDADE_MEDIDA (und_medidas) VALUES ('g');
INSERT INTO TPS_UNIDADE_MEDIDA (und_medidas) VALUES ('kg');
INSERT INTO TPS_UNIDADE_MEDIDA (und_medidas) VALUES ('L');
INSERT INTO TPS_UNIDADE_MEDIDA (und_medidas) VALUES ('mg');

INSERT INTO TPS_STATUS_CESTA (status_cesta) VALUES ('CRIADA');
INSERT INTO TPS_STATUS_CESTA (status_cesta) VALUES ('ENTREGUE');
INSERT INTO TPS_STATUS_CESTA (status_cesta) VALUES ('CANCELADA');

INSERT INTO TPS_LOCALIZACAO_ESTOQUE (localizacao_desc) VALUES ('1A');
INSERT INTO TPS_LOCALIZACAO_ESTOQUE (localizacao_desc) VALUES ('2B');
INSERT INTO TPS_LOCALIZACAO_ESTOQUE (localizacao_desc) VALUES ('3C');
INSERT INTO TPS_LOCALIZACAO_ESTOQUE (localizacao_desc) VALUES ('4D');
INSERT INTO TPS_LOCALIZACAO_ESTOQUE (localizacao_desc) VALUES ('5E');

INSERT INTO TPS_CATEGORIA (categoria_desc) VALUES ('feijao');
INSERT INTO TPS_CATEGORIA (categoria_desc) VALUES ('arroz');
INSERT INTO TPS_CATEGORIA (categoria_desc) VALUES ('oleo');
INSERT INTO TPS_CATEGORIA (categoria_desc) VALUES ('acucar');
INSERT INTO TPS_CATEGORIA (categoria_desc) VALUES ('macarrao');
INSERT INTO TPS_CATEGORIA (categoria_desc) VALUES ('cafe');
INSERT INTO TPS_CATEGORIA (categoria_desc) VALUES ('leite');
INSERT INTO TPS_CATEGORIA (categoria_desc) VALUES ('farinha');
INSERT INTO TPS_CATEGORIA (categoria_desc) VALUES ('fuba');